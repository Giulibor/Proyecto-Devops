minikube start --driver=docker  
    -- Arranca un cl√∫ster de Kubernetes local con Minikube, usando Docker como ‚Äúm√°quina virtual‚Äù.
eval $(minikube docker-env)
    -- Esto hace que tu Docker local apunte al demonio de Docker dentro de Mi

Crear v1 y v2 (cambio m√≠nimo visible)
Cambio en: app.component.html
    <h1>Balada das serpentes üêç <span style="font-size:.8em;">v1 (blue)</span></h1>
    corro:  
        cp src/app/app.component.html src/app/app.component.html
        docker build -t snake-app:v1 .

Cambio en: app.component.html
    <h1>Balada das serpentes üêç <span style="font-size:.8em;">v2 (green)</span></h1>
    corro:  
        cp src/app/app.component.html src/app/app.component.html
        docker build -t snake-app:v2 .\

Manifiestos Kubernetes (blue/green + service)
    cree, carpeta k8s, y agrego archivos 
    - deployment-blue.yaml
    - deployment-green.yaml
    - service.yam

    aplico:
        kubectl apply -f k8s/deployment-blue.yaml  -- deploy de v1
        kubectl apply -f k8s/deployment-green.yaml -- deploy de v2
        kubectl apply -f k8s/service.yaml. -- creaci√≥n de service snake-app

        kubectl get pods -l app=snake-app  -- lista todos los pods que tengan la etiqueta app=snake-app
        kubectl rollout status deploy/snake-app-blue  -- Revisa el estado del despliegue
        kubectl rollout status deploy/snake-app-green  -- Revisa el estado del despliegue

Abro servicio en navegador: minikube service snake-app

Pasar a green: kubectl patch svc snake-app -p '{"spec":{"selector":{"app":"snake-app","color":"green"}}}'
Refrescar con *: command+sift+R 
Pasar a blue: kubectl patch svc snake-app -p '{"spec":{"selector":{"app":"snake-app","color":"blue"}}}'
Refrescar con *: command+sift+R
*: se debe refrescar asi ya que la app es Angular servida por Nginx por lo que el navegador guarda el HTML en cache.
    Entonces aunque el Service ya apunte a blue, se sigue viendo la versi√≥n anterior.

Validaciones:
# Pods por color
kubectl get pods -l app=snake-app -L color

# Endpoint del service y NodePort
kubectl get svc snake-app -o wide

# Logs para inspecci√≥n
kubectl logs deploy/snake-app-blue
kubectl logs deploy/snake-app-green
